module DemoLayout where
-- import DA.Date

import Authority
import Citizen

-- *** CovidDetection ***
template CovidDetection with
    id : Int
    detected : Bool
    health : AuthorityEmployeeRole
    borderCtrl : Party
    -- observers : [ContractId AuthorityEmployeeRole]
  where
    signatory health.employee
    observer borderCtrl
    -- key (health, id)

    -- ContractId CovidDetection
    choice MarkAsHealthy : () with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
      controller health.employee
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GOHealth)
          
template CovidProposal with
    id : Int -- "id05660001"
    health : AuthorityEmployeeRole 
    hls : AuthorityEmployeeRole 
  where
    signatory hls.employee
    observer health.employee

    choice CovidProposalAccept : ContractId CovidDetection with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
        borderCtrl : Party
      controller health.employee 
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GOHealth)
        create  CovidDetection with
          id = id
          detected = True
          health = healthRole
          borderCtrl = borderCtrl
    
    -- ContractId CovidDetection
    choice CovidProposalReject :  () with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
      controller health.employee
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GOHealth)

template AlimonyIssue with
    id : Int
    hasIssues : Bool
    internalAffairs : AuthorityEmployeeRole 
    borderCtrl : Party
  where
    signatory internalAffairs.employee
    observer borderCtrl

    -- ContractId CovidDetection
    choice MarkAsNoAlimonyIssues : () with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
      controller internalAffairs.employee
      do
        internalAffairsRole <- fetch internalAffairsRoleCid
        assert (internalAffairsRole.office == GOInternalAffairs)


template AlimonyIssueProposal with
    id : Int -- "id05660001"
    internalAffairs : AuthorityEmployeeRole
  where
    signatory internalAffairs.employee

    choice AlimonyIssueProposalAccept : ContractId AlimonyIssue with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
        borderCtrl : Party
      controller internalAffairs.employee
      do
        internalAffairsRole <- fetch internalAffairsRoleCid
        assert (internalAffairsRole.office == GOInternalAffairs)
        create  AlimonyIssue with
          id = id
          hasIssues = True
          internalAffairs = internalAffairsRole
          borderCtrl = borderCtrl
    
    choice AlimonyIssueProposalReject : () with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
      controller internalAffairs.employee
      do
        internalAffairsRole <- fetch internalAffairsRoleCid
        assert (internalAffairsRole.office == GOInternalAffairs)
