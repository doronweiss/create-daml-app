module DemoLayout where
import DA.Date

import Authority

-- *** CovidDetection ***
template CovidDetection with
    id : Int
    detected : Bool
    health : ContractId AuthorityEmployeeRole 
    -- observers : [ContractId AuthorityEmployeeRole]
  where
    signatory health
    --observer observers
    -- key (health, id)

    nonconsuming choice MarkAsHealthy : ContractId CovidDetection with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
      controller health
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GovOffice Health)
        assert (healthRole.owner == health)
        archive this
          
template CovidProposal with
    id : Int -- "id05660001"
    health : ContractId AuthorityEmployeeRole 
    hls : ContractId AuthorityEmployeeRole 
    internalAffairs : ContractId AuthorityEmployeeRole
    borderControl : ContractId AuthorityEmployeeRole
  where
    signatory hls
    observer [health, internalAffairs]

    choice CovidProposalAccept : ContractId CovidDetection with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
      controller health 
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GovOffice Health)
        assert (healthRole.owner == health)
        create  CovidDetection with
          id = id
          detected = True
          health = healthDepartmentRoleCid
          -- observers = [hls, borderControl, internalAffairs]
    
    nonconsuming choice CovidProposalReject : ContractId CovidDetection with
        healthDepartmentRoleCid : ContractId AuthorityEmployeeRole
      controller health 
      do
        healthRole <- fetch healthDepartmentRoleCid
        assert (healthRole.office == GovOffice Health)
        assert (healthRole.owner == health)
        archive this
        -- create  CovidDetection with
        --   id = id
        --   detected = False
        --   health = health
        --   -- observers = [hls, borderControl, internalAffairs]


template AlimonyIssue with
    id : Int
    hasIssues : Bool
    internalAffairs : ContractId AuthorityEmployeeRole 
  where
    signatory internalAffairs

    nonconsuming choice MarkAsNoAlimonyIssues : ContractId CovidDetection with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
      controller internalAffairs
      do
        internalAffairsRole <- fetch internalAffairsRoleCid
        assert (internalAffairsRole.office == GovOffice InternalAffairs)
        assert (internalAffairsRole.owner == InternalAffairs)
        archive this


template AlimonyIssueProposal with
    id : Int -- "id05660001"
    internalAffairs : ContractId AuthorityEmployeeRole
    borderControl : ContractId AuthorityEmployeeRole
  where
    signatory internalAffairs
    observer [borderControl]

    choice AlimonyIssueProposalAccept : ContractId CovidDetection with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
      controller internalAffairs 
      do
        internalAffairsRole <- fetch internalAffairsRoleCid
        assert (internalAffairsRole.office == GovOffice internalAffairs)
        assert (internalAffairsRole.owner == internalAffairs)
        create  AlimonyIssue with
          id = id
          hasIssues = True
          internalAffairs = internalAffairsRoleCid
          -- observers = [hls, borderControl, internalAffairs]
    
    choice AlimonyIssueProposalReject : ContractId CovidDetection with
        internalAffairsRoleCid : ContractId AuthorityEmployeeRole
      controller InternalAffairs 
      do
        healthRole <- fetch internalAffairsRoleCid
        assert (healthRole.office == GovOffice InternalAffairs)
        assert (healthRole.owner == InternalAffairs)
        archive this
        -- create  CovidDetection with
        --   id = id
        --   detected = False
        --   health = health
          -- observers = [hls, borderControl, internalAffairs]
